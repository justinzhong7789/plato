clients:
    # The total number of clients
    total_clients: 200

    # The number of clients selected in each round
    per_round: 20

    # Should the clients compute test accuracy locally?
    do_test: false

    # Whether simulate clients or not
    simulation: true

    # Whether client-server communication should be simulated with files
    comm_simulation: true

    random_seed: 1

server:
    address: 127.0.0.1
    port: 8054

    ping_timeout: 36000
    ping_interval: 36000

    # Should we simulate the wall-clock time on the server? Useful if max_concurrency is specified
    simulate_wall_time: true

    synchronous: false
    minimum_clients_aggregated: 20

    checkpoint_dir: /data/fei/checkpoints
    model_dir: /data/fei/models

    random_seed: 1

data:
    # The training and testing dataset
    datasource: EMNIST

    # Where the dataset is located
    data_path: /data/fei/data

    # Number of samples in each partition
    partition_size: 1000

    # Client's partition size distribution
    # partition_distribution:
    #     distribution: uniform
    #     low: 0.4
    #     high: 1.0

    # IID or non-IID?
    sampler: noniid

    # The concentration parameter for the Dirichlet distribution
    concentration: 1

    # The random seed for sampling data
    random_seed: 1

trainer:
    # The maximum number of training rounds
    rounds: 100

    # Whether the training should use multiple GPUs if available
    parallelized: false

    # The maximum number of clients running concurrently
    max_concurrency: 5

    # The target accuracy
    target_accuracy: 1.0

    # Number of epoches for local training in each communication round
    epochs: 5
    batch_size: 10
    optimizer: SGD
    learning_rate: 0.01
    momentum: 0.9
    weight_decay: 0.0

    # The machine learning model
    model_name: lenet5
    num_classes: 47

algorithm:
    # Aggregation algorithm
    type: fedavg

    # RL agent
    discrete_action_space: false
    n_features: 4
    max_action: 1
    min_action: -1
    max_episode: 2000
    alpha: 5 # controls the decreasing rate of the mapping function
    beta: 20 # coefficient used in reward function
    theta: 0.01 # threshold for stdev(pre_acc)
    base: 1000 # for exponential function in state normalization
    log_interval: 10
    steps_per_episode: 3
    mode: train # train/test
    pretrained: false
    pretrained_iter: 0
    test_step: 20

    # RL policy
    model_name: td3
    # reward discounted factor
    gamma: 0.99
    tau: 0.005
    learning_rate: 0.0003
    # Noise added to target policy during critic update
    policy_noise: 0.25
    # Range to clip target policy noise
    noise_clip: 0.5
    # Frequency of delayed policy updates
    policy_freq: 2
    # mini batch size
    batch_size: 64
    hidden_size: 256
    # steps sampling random actions
    start_steps: 0
    # replay memory
    replay_size: 1000
    replay_seed: 1234
    # whether use LSTM or FC nets
    recurrent_actor: true

results:
    result_dir: /data/fei/results/EMNIST_lenet5/FEI

    # Write the following parameter(s) into a CSV
    types: round, accuracy, elapsed_time, comm_time, round_time

